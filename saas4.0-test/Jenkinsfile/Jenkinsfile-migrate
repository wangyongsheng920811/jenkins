pipeline
{
    agent { label 'saas4.0-migrate' }  
    
    options
    {
        buildDiscarder(logRotator(artifactDaysToKeepStr: '100', artifactNumToKeepStr: '10', daysToKeepStr: '100', numToKeepStr: '10'))
        disableConcurrentBuilds()
    }
    parameters {
        gitParameter name: 'branch', type: 'PT_BRANCH', defaultValue: 'develop', useRepository: '(?!.*saas4.0-test).*.git'
    }

    stages
    {
        stage('Build')
        {           
            steps
            {
                script
                {
                    sh "cd $env.WORKSPACE/code && rm -rf target lib *.jar || echo 'no dir'"
                    branch = (params.branch == "!No Git repository configured in SCM configuration") ? "develop" : params.branch 
                    testUrl = "git@code.dding.net:server/lease-platform/saas4.0-test.git"
                    testBranch = "master"
                    scripts = load 'Jenkinsfile/Jenkinsfile/JenkinsfileScript'
                    scripts.initParam()
                    scripts.downloadCode(url, branch, "code")                  
                    scripts.downloadCode(testUrl, testBranch, "test_code")
                }
                             
                sh "cd $env.WORKSPACE/code && $mvnCommand"
                wrap([$class: 'BuildUser'])
                {
                    sh "cd $env.WORKSPACE/test_code/Script && JENKINS_NODE_COOKIE=dontKillMe && $deployCommand"
                }
            }
        }
    }
    
    post
    {      
        always
        {
                             
            script
            {
                robotPath = "$env.WORKSPACE/test_code/Script/DdRobot.py"
                scripts.notifyRobot(robotPath)
            }
            archiveArtifacts "code/pms-migrate-server/dist/*.jar"
            
        }
    }
}
